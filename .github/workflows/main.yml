name: test

on:
  push:
    branches: [ "main", "pipeline-tests" ]

jobs:
  build-and-deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js and Yarn
      uses: actions/setup-node@v2
      with:
        node-version: 18

    - name: Install Dependencies
      run: cd frontend && yarn install

    - name: Build React App
      run: cd frontend && yarn build && pwd && ls -l

    - name: Check if OK
      run: pwd && ls -l
      
    - name: Copy Build to Server
      uses: appleboy/scp-action@master
      with:
        host: "13.93.65.60"
        username: "azureuser"
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: frontend/build/
        target: /home/azureuser/

        
  build-and-deploy-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Run tests
      run: mvn clean test --file backend/pom.xml
    - name: Add application constants
      run: echo "${{ secrets.CONSTANTS }}" > backend/src/main/resources/constants.properties
    - name: create Jar
      run: mvn clean package --file backend/pom.xml
    - name: Change name of .jar for simplicity
      run: mv /home/runner/work/projects-helper/projects-helper/backend/target/*.jar app.jar
      
    - name: Copy Build to Server
      uses: appleboy/scp-action@master
      with:
        host: "13.93.65.60"
        username: "azureuser"
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: backend/target/app.jar
        target: /home/azureuser/

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           cache: maven
#       # - name: Run tests
#       #   run: mvn clean test --file magazyn-backend/pom.xml
#       # - name: Add application properties
#       #   run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > magazyn-backend/src/main/resources/application.properties
#       # - name: create Jar
#       #   run: mvn clean package --file magazyn-backend/pom.xml
#       - name: test
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#           CONSTANTS: ${{ secrets.CONSTANTS }}
#         run: echo "Test" &&
#              echo "$SSH_PRIVATE_KEY" &&
#              echo "$CONSTANTS"
 
      # - name: Deploy .jar
      #   run: sshpass -p ${{ secrets.SSH_PASSWORD }} scp -o StrictHostKeyChecking=no magazyn.jar azureuser@40.114.226.113:~/
      # #    - name: ssh
      # #      run: sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no azureuser@40.114.226.113 'java -jar magazyn.jar'
      # - name: Deploy frontend
      #   run: |
      #     echo "${{ secrets.DEPLOY_KEY }}" > key.ssh
      #     sshpass -p ${{ secrets.SSH_PASSWORD }} scp -o StrictHostKeyChecking=no key.ssh azureuser@40.114.226.113:~/
      #     sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no azureuser@40.114.226.113 'chmod 700 key.ssh && mv key.ssh .ssh/id_rsa'
      #     sshpass -p ${{ secrets.SSH_PASSWORD }} scp -o StrictHostKeyChecking=no magazyn-frontend/deploy-front.sh azureuser@40.114.226.113:~/
      #     sshpass -p ${{ secrets.SSH_PASSWORD }} ssh azureuser@40.114.226.113 ./deploy-front.sh http://40.114.226.113:8080/

